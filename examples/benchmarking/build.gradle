buildscript {
    ext.kotlin_version = '1.2.31'

    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

    }
}

plugins {
    id 'java'
    id 'me.champeau.gradle.jmh' version "0.4.5"
    id "org.jetbrains.kotlin.jvm" version "1.2.31"
}

repositories {
    jcenter()
    mavenLocal()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'org.openjdk.jmh:jmh-core:1.20'

    compile 'com.google.guava:guava:24.1-jre'

    jmh 'commons-io:commons-io:2.4'
    jmh 'com.google.guava:guava:24.1-jre'

    compile "de.mpicbg.scicomp:krangl:0.15"
    jmh "de.mpicbg.scicomp:krangl:0.15"
}

jmh {
//    include = 'org\\..*Bench.*'
//    resultFormat = 'json'
//    resultsFile = file('perf_logs/benchmarks.json')
    resultFormat = 'csv'
    resultsFile = file('perf_logs/jmh_results_' + getDate()+ '.csv')

    // for list of available profilers see http://java-performance.info/introduction-jmh-profilers/
//    profilers = Arrays.asList("")
}

//now = new Date().format('yyyyMMdd_HHmm')
def getDate() {
    new Date().format('yyyyMMdd_HHmm')
}